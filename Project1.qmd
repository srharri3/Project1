---
title: "ST 558 | Project 1 | Team N"
author: Savannah Harrison, Andy Powers
format: html
editor: visual
---

# Introduction

This project demonstrates use of R for manipulating and processing census datasets via API. Generic functions will auto-summarize and auto-plot returned data. The document will describe how these function and provide examples.

# Data Source

We will query the *Public Use Microdata Sample (PUMS) Census API*. The API offers *pseudo person-level* data. To demonstrate our functions while avoiding memory errors, we will default to a subset of state 14 data. Users may adjust this within our function calls.

## Resources

-   [Information about the PUMS API](https://www.census.gov/data/developers/data-sets/census-microdata-api.html)
-   [Variable list (2022)](https://api.census.gov/data/2022/acs/acs1/pums/variables.html)
-   [API call examples](https://api.census.gov/data/2022/acs/acs1/pums/examples.html)
-   [Menu-based API call explorer](https://data.census.gov/mdat/#/)
-   Sample: `api.census.gov/data/2022/acs/acs1/pums?get=SEX,PWGTP,MAR&SCHL=24&key=YOUR_KEY`

## User Choices

User may choose particular variables or conditions (subsets) to be returned.

# Data Processing

We will follow these steps for data processing:

1.  Achieve a basic call to a sample API endpoint, returning a tibble.

2.  Write a *helper* function to take the return from `GET()` and modify it into a `tibble`.

3.  Write a function to query API, with editable parameters.

4.  Write a function to allow user to specify multiple years of survey data **and** all other options above.

More details including valid arguments, etc. will be listed below, as we address each step.

## Test call to the Census API
Before we build functions, let's just make a simple call without any API key, to ensure it works as expected.

```{r}

```



3.  Write a function to query API, with editable parameters:

    1.  Year of survey
        -   Default:
            -   2022
        -   Valid:
            -   Integer in \[2010,2022\]
    2.  Numeric var(s) to return
        -   Default:
            -   AGEP
            -   PWGTP (req)
        -   Valid:
            -   AGEP
            -   GASP
            -   GRPIP
            -   JWAP (time)
            -   JWDP (time)
            -   JWMNP
        -   Conditions:
            -   Translate variables to numeric or time (middle of period) as applicable.
            -   At least one numeric var other than PWGTP must be returned.
            -   Ensure valid user entries.
    3.  Categorical var(s) to return
        -   Default:
            -   SEX
        -   Valid:
            -   FER
            -   HHL
            -   HISPEED
            -   JWTRNS
            -   SCH
            -   SCHL
            -   SEX
        -   Conditions:
            -   Translate variables into factors with appropriate levels as applicable.
            -   At least one categorical variable must be returned.
            -   Ensure valid user entries.
    4.  Geography level
        -   Default:
            -   All
        -   Valid:
            -   All
            -   Region
            -   Division
            -   State
        -   Conditions:
            -   Ensure valid user entries.
    5.  Subset argument (to adjust API call made)
        -   Conditions:
            -   User can specify specific Regions, Divisions, or States.
            -   Only specific levels selected will be returned.
            -   Ensure valid user entries.

4.  Write a function to allow user to specify multiple years of survey data **and** all other options above.

    -   Conditions:
        -   Call single year function repeatedly as needed.
        -   Combine data into one final tibble, including `year` variable.

# Person Level Records

The Census data returns a form of compressed results, where identical rows representing multiple people are condensed to one row with the field `PWGTP` representing the number of observations (people) associated with that row. We will not replicate these rows to keep our table smaller and simpler, but it must be considered for data summarization to ensure proper proportions are understood.

# Summarizing...

Savannah!
